import * as vscode from 'vscode';

interface DABC_Functions {
    id: number;
    dabc_msg: string;
    version: string;
    class: string;
    method: string;
    param: string;
    default: string;
    dabc_module: string;
    reason: string;
    effect: string;
}

const numpy_functions: DABC_Functions[] = [
    {'id': 0,
    'dabc_msg': 'Previously, the default was documented to be -1, but that was in error. At some future date, the default will change to -1, as originally intended. Until then, the axis should be given explicitly when ``arr.ndim > 1``, to avoid a FutureWarning.',
    'version': '1.13.0',
    'class': 'MaskedArrayFutureWarning(FutureWarning)',
    'method': 'def argsort(self,axis=np._NoValue,kind=None,order=None,endwith=True,fill_value=None)',
    'param': 'axis : int',
    'default': 'np._NoValue',
    'dabc_module': 'Masked Arrays',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1,
    'dabc_msg': 'Made default False in response to CVE-2019-6446.',
    'version': '1.16.3',
    'class': ' NpzFile(Mapping)',
    'method': 'def __init__(self,fid,own_fid=False,allow_pickle=False,pickle_kwargs=None, *,max_header_size=format._MAX_HEADER_SIZE)',
    'param': 'allow_pickle: bool',
    'default': 'False',
    'dabc_module': 'General Functions',
    'reason': 'Bug Fixing',
    'effect': 'Behavior'},
   {'id': 2,
    'dabc_msg': 'Made default False in response to CVE-2019-6446.',
    'version': '1.16.3',
    'class': 'NpzFile(Mapping)',
    'method': "def load(file,mmap_mode=None,allow_pickle=False,fix_imports=True,encoding='ASCII',*,max_header_size=format._MAX_HEADER_SIZE)",
    'param': 'allow_pickle: bool',
    'default': 'False',
    'dabc_module': 'General Functions',
    'reason': 'Bug Fixing',
    'effect': 'Behavior'},
   {'id': 3,
    'dabc_msg': 'Made default False in response to CVE-2019-6446.',
    'version': '1.16.3',
    'class': 'NA',
    'method': 'def read_array(fp,allow_pickle=False,pickle_kwargs=None,*,max_header_size=_MAX_HEADER_SIZE)',
    'param': 'allow_pickle : bool',
    'default': 'False',
    'dabc_module': 'General Functions',
    'reason': 'Bug Fixing',
    'effect': 'Behavior'},
   {'id': 4,
    'dabc_msg': 'If not set, a FutureWarning is given. The previous default of ``-1`` will use the machine precision as `rcond` parameter, the new default will use the machine precision times `max(M, N)`. To silence the warning and use the new default, use ``rcond=None``, to keep using the old behavior, use ``rcond=-1``',
    'version': '1.14.0',
    'class': 'NA',
    'method': 'def lstsq(a,b,rcond="warn")',
    'param': 'rcond : float',
    'default': '"warn"',
    'dabc_module': 'Linear Algebra',
    'reason': 'API Compatibility',
    'effect': 'Performance'}
]

const pandas_functions: DABC_Functions[] = [
    {'id': 1,
    'dabc_msg': 'Default value is changed to ``True``. Google has deprecated the ``auth_local_webserver = False`` `"out of band" (copy-paste) flow <https://developers.googleblog.com/2022/02/making-oauth-flows-safer.html?m=1#disallowed-oob>`_.',
    'version': '1.5.2000',
    'class': 'DataFrame(NDFrame, OpsMixin)',
    'method': 'method: def to_gbq(self,destination_table,project_id = None,chunksize = None,reauth = False,if_exists = "fail",auth_local_webserver = True,table_schema = None,location = None,progress_bar = True,credentials=None)',
    'param': 'auth_local_webserver : bool',
    'default': 'True',
    'dabc_module': 'DataFrame',
    'reason': 'API Simplification',
    'effect': 'Behaviour'},
   {'id': 2,
    'dabc_msg': 'Default value is changed to ``True``. Google has deprecated the ``auth_local_webserver = False`` `"out of band" (copy-paste) flow <https://developers.googleblog.com/2022/02/making-oauth-flows-safer.html?m=1#disallowed-oob>`_.',
    'version': '1.5.2000',
    'class': 'NA',
    'method': 'def read_gbq(query,project_id = None,index_col = None,col_order = None,reauth = False,auth_local_webserver = True,dialect = None,location = None,configuration = None,credentials=None,use_bqstorage_api = None,max_results = None,progress_bar_type = None)',
    'param': 'auth_local_webserver : bool',
    'default': 'True',
    'dabc_module': 'Input/Output',
    'reason': 'New Feature',
    'effect': 'Behaviour'},
   {'id': 3,
    'dabc_msg': 'Changed to not sort by default. ',
    'version': '1.0.0',
    'class': 'NA',
    'method': 'def concat(objs,axis = 0,join = "outer",ignore_index = False,keys=None,levels=None,names=None,verify_integrity = False,sort = False,copy = True)',
    'param': 'sort : bool',
    'default': 'False',
    'dabc_module': 'General Functions',
    'reason': 'nan',
    'effect': 'Aesthetics'},
   {'id': 4,
    'dabc_msg': 'Changed to not sort by default.',
    'version': '1.0.0',
    'class': ' DataFrame(NDFrame, OpsMixin)',
    'method': 'def append(self,other,ignore_index = False,verify_integrity = False,sort = False)',
    'param': 'sort : bool',
    'default': 'False',
    'dabc_module': 'DataFrame',
    'reason': 'Maintainability',
    'effect': 'Aesthetics'},
   {'id': 5,
    'dabc_msg': "Not applicable for ``orient='table'``.",
    'version': '0.25.0',
    'class': 'NA',
    'method': 'def read_json(path_or_buf,orient = None,typ = "frame",dtype = None,convert_axes=None,convert_dates = True,keep_default_dates = True,numpy = False,precise_float = False,date_unit = None,encoding = None,encoding_errors = "strict",lines = False,chunksize = None,compression = "infer",nrows = None,storage_options = None)',
    'param': 'convert_axes : bool',
    'default': 'None',
    'dabc_module': 'Input/Output',
    'reason': 'Maintainability',
    'effect': 'Aesthetics'}
]

const sklearn_functions: DABC_Functions[] = [
    {'id': 0,
    'dabc_msg': '`n_jobs` default changed from 1 to None',
    'version': '0.20',
    'class': 'OneVsRestClassifier(MultiOutputMixin, ClassifierMixin, MetaEstimatorMixin, BaseEstimator)',
    'method': '__init__(self, estimator, *, n_jobs=None, verbose=0)',
    'param': 'n_jobs : int',
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Performance'},
   {'id': 10,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': ' CalibratedClassifierCV(ClassifierMixin, MetaEstimatorMixin, BaseEstimator)',
    'method': '__init__(self,base_estimator=None,*,method="sigmoid",cv=None,n_jobs=None,ensemble=True)',
    'param': 'cv : int, cross-validation generator, iterable or "prefit"',
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 26,
    'dabc_msg': '`n_jobs` default changed from `1` to `None`.',
    'version': '0.20',
    'class': 'MultiOutputRegressor(RegressorMixin, _MultiOutputEstimator)',
    'method': '__init__(self, estimator, *, n_jobs=None)',
    'param': 'n_jobs : int or None, optional',
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Performance'},
   {'id': 29,
    'dabc_msg': '`n_jobs` default changed from `1` to `None`.',
    'version': '0.20',
    'class': 'MultiOutputClassifier(ClassifierMixin, _MultiOutputEstimator)',
    'method': '__init__(self, estimator, *, n_jobs=None)',
    'param': 'n_jobs : int or None, optional',
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Performance'},
   {'id': 110,
    'dabc_msg': "Deprecated `None` as a transformer in favor of 'drop'",
    'version': '0.22',
    'class': 'FeatureUnion(TransformerMixin, _BaseComposition)',
    'method': '__init__(self, transformer_list, *, n_jobs=None, transformer_weights=None, verbose=False)',
    'param': 'transformer_list : list of (str, transformer) tuples',
    'default': '',
    'dabc_module': 'pipeline',
    'reason': 'Maintainability',
    'effect': 'Performance'},
   {'id': 111,
    'dabc_msg': '`n_jobs` default changed from 1 to None',
    'version': 'v0.20',
    'class': 'FeatureUnion(TransformerMixin, _BaseComposition)',
    'method': '__init__(self, transformer_list, *, n_jobs=None, transformer_weights=None, verbose=False)',
    'param': 'n_jobs : int',
    'default': 'None',
    'dabc_module': 'pipeline',
    'reason': 'nan',
    'effect': 'Refactoring'},
   {'id': 113,
    'dabc_msg': '`n_jobs` default changed from 1 to None',
    'version': 'v0.20',
    'class': 'NA',
    'method': 'make_union(*transformers, n_jobs=None, verbose=False)',
    'param': 'n_jobs : int',
    'default': 'None',
    'dabc_module': 'pipeline',
    'reason': 'Maintainability',
    'effect': 'Performance'},
   {'id': 123,
    'dabc_msg': 'Default changed from False to True.',
    'version': '0.23',
    'class': 'NA',
    'method': 'def config_context(*,assume_finite=None,working_memory=None,print_changed_only=None,display=None,pairwise_dist_chunk_size=None,enable_cython_pairwise_dist=None)',
    'param': 'print_changed_only : bool',
    'default': 'None',  
    'dabc_module': 'Others',
    'reason': 'nan',
    'effect': 'Aesthetics'},
   {'id': 134,
    'dabc_msg': 'The default value of `strategy` has changed to "prior" in version',
    'version': '0.24',
    'class': 'DummyClassifier(MultiOutputMixin, ClassifierMixin, BaseEstimator)',
    'method': '__init__(self, *, strategy="prior", random_state=None, constant=None)',
    'param': 'strategy : {"most_frequent", "prior", "stratified", "uniform","constant"}',
    'default': '"prior"',
    'dabc_module': 'Model Training',
    'reason': 'API simplification',
    'effect': 'Behavior'},
   {'id': 165,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.20',
    'class': ' GraphicalLassoCV(GraphicalLasso)',
    'method': ' __init__(self,*,alphas=4,n_refinements=4,cv=None,tol=1e-4,enet_tol=1e-4,max_iter=100,mode="cd",n_jobs=None,verbose=False,assume_centered=False)',
    'param': 'cv : int, cross-validation generator or iterable',
    'default': 'None',
    'dabc_module': 'Data Analysis',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 166,
    'dabc_msg': '`n_jobs` default changed from 1 to None',
    'version': 'v0.20',
    'class': 'GraphicalLassoCV(GraphicalLasso)',
    'method': '__init__(self,*,alphas=4,n_refinements=4,cv=None,tol=1e-4,enet_tol=1e-4,max_iter=100,mode="cd",n_jobs=None,verbose=False,assume_centered=False)',
    'param': 'n_jobs : int',
    'default': 'None',
    'dabc_module': 'Data Analysis',
    'reason': 'Maintainability',
    'effect': 'Performance'},
   {'id': 202,
    'dabc_msg': 'The default of `max_features` changed from `"auto"` to `"sqrt"`.',
    'version': '1.1',
    'class': 'ExtraTreeClassifier(DecisionTreeClassifier)',
    'method': '__init__(self,*,criterion="gini",splitter="random",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_features="sqrt",random_state=None,max_leaf_nodes=None,min_impurity_decrease=0.0,class_weight=None,ccp_alpha=0.0)',
    'param': 'max_features : int, float, {"auto", "sqrt", "log2"} or None',
    'default': '"sqrt"',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Refactoring'},
   {'id': 215,
    'dabc_msg': 'The default of `max_features` changed from `"auto"` to `1.0`.',
    'version': '1.1',
    'class': 'ExtraTreeRegressor(DecisionTreeRegressor)',
    'method': '__init__(self,*,criterion="squared_error",splitter="random",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_features=1.0,random_state=None,min_impurity_decrease=0.0,max_leaf_nodes=None,ccp_alpha=0.0)',
    'param': 'max_features : int, float, {"auto", "sqrt", "log2"} or None',
    'default': '1.0',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Refactoring'},
   {'id': 223,
    'dabc_msg': 'Default of out_file changed from "tree.dot" to None.',
    'version': '0.20',
    'class': 'NA',
    'method': 'def export_graphviz(decision_tree,out_file=None,*,max_depth=None,feature_names=None,class_names=None,label="all",filled=False,leaves_parallel=False,impurity=True,node_ids=False,proportion=False,rotate=False,rounded=False,special_characters=False,precision=3,fontname="helvetica")',
    'param': 'out_file : object or str',
    'default': 'None',
    'dabc_module': 'Utils',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 265,
    'dabc_msg': 'The default of ``validate`` changed from True to False.',
    'version': '0.22',
    'class': 'FunctionTransformer(TransformerMixin, BaseEstimator)',
    'method': '__init__(self,func=None,inverse_func=None,*,validate=False,accept_sparse=False,check_inverse=True,feature_names_out=None,kw_args=None,inv_kw_args=None,)',
    'param': 'validate : bool',
    'default': 'False',
    'dabc_module': 'preprocessing',
    'reason': 'API simplification',
    'effect': 'Behavior'},
   {'id': 344,
    'dabc_msg': "The default value of the `method` parameter changed from 'box-cox' to 'yeo-johnson' in 0.23.",
    'version': '0.23',
    'class': 'NA',
    'method': 'power_transform(X, method="yeo-johnson", *, standardize=True, copy=True), ',
    'param': 'method : {"yeo-johnson", "box-cox"}',
    'default': '"yeo-johnson"',
    'dabc_module': 'preprocessing',
    'reason': 'New feature',
    'effect': 'Behavior'},
   {'id': 356,
    'dabc_msg': 'The default value of ``n_estimators`` changed from 10 to 100',
    'version': '0.22',
    'class': 'RandomForestClassifier(ForestClassifier)',
    'method': '__init__(self,n_estimators=100,*,criterion="gini",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_features="sqrt",max_leaf_nodes=None,min_impurity_decrease=0.0,bootstrap=True,oob_score=False,n_jobs=None,random_state=None,verbose=0,warm_start=False,class_weight=None,ccp_alpha=0.0,max_samples=None)',
    'param':  'n_estimators : int', 
    'default': '100',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 359,
    'dabc_msg': 'The default of `max_features` changed from `"auto"` to `"sqrt"`.',
    'version': '1.1',
    'class': 'RandomForestClassifier(ForestClassifier)',
    'method': '__init__(self,n_estimators=100,*,criterion="gini",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_features="sqrt",max_leaf_nodes=None,min_impurity_decrease=0.0,bootstrap=True,oob_score=False,n_jobs=None,random_state=None,verbose=0,warm_start=False,class_weight=None,ccp_alpha=0.0,max_samples=None)',
    'param': 'max_features : {"sqrt", "log2", None}, int or float',
    'default': '"sqrt"',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Refactoring'},
   {'id': 367,
    'dabc_msg': 'The default value of ``n_estimators`` changed from 10 to 100',
    'version': '0.22',
    'class': 'RandomForestRegressor(ForestRegressor)',
    'method': '__init__(self,n_estimators=100,*,criterion="squared_error",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_features=1.0,max_leaf_nodes=None,min_impurity_decrease=0.0,bootstrap=True,oob_score=False,n_jobs=None,random_state=None,verbose=0,warm_start=False,ccp_alpha=0.0,max_samples=None)',
    'param': 'n_estimators : int', 
    'default': '100',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 374,
    'dabc_msg': 'The default of `max_features` changed from `"auto"` to 1.0.',
    'version': '1.1',
    'class': 'RandomForestRegressor(ForestRegressor)',
    'method': '__init__(self,n_estimators=100,*,criterion="squared_error",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_features=1.0,max_leaf_nodes=None,min_impurity_decrease=0.0,bootstrap=True,oob_score=False,n_jobs=None,random_state=None,verbose=0,warm_start=False,ccp_alpha=0.0,max_samples=None)',
    'param': 'max_features : {"sqrt", "log2", None}, int or float', 
    'default': '1.0',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Refactoring'},
   {'id': 382,
    'dabc_msg': 'The default value of ``n_estimators`` changed from 10 to 100',
    'version': '0.22',
    'class': 'ExtraTreesClassifier(ForestClassifier)',
    'method': '__init__(self,n_estimators=100,*,criterion="gini",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_features="sqrt",max_leaf_nodes=None,min_impurity_decrease=0.0,bootstrap=False,oob_score=False,n_jobs=None,random_state=None,verbose=0,warm_start=False,class_weight=None,ccp_alpha=0.0,max_samples=None)',
    'param': 'n_estimators : int', 
    'default': '100',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 385,
    'dabc_msg': 'The default of `max_features` changed from `"auto"` to `"sqrt"`.',
    'version': '1.1',
    'class': 'ExtraTreesClassifier(ForestClassifier)',
    'method': '__init__(self,n_estimators=100,*,criterion="gini",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_features="sqrt",max_leaf_nodes=None,min_impurity_decrease=0.0,bootstrap=False,oob_score=False,n_jobs=None,random_state=None,verbose=0,warm_start=False,class_weight=None,ccp_alpha=0.0,max_samples=None)',
    'param': 'max_features : {"sqrt", "log2", None}, int or float', 
    'default': '"sqrt"',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Refactoring'},
   {'id': 393,
    'dabc_msg': 'The default value of ``n_estimators`` changed from 10 to 100',
    'version': '0.22',
    'class': 'ExtraTreesRegressor(ForestRegressor)',
    'method': '__init__(self,n_estimators=100,*,criterion="squared_error",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_features=1.0,max_leaf_nodes=None,min_impurity_decrease=0.0,bootstrap=False,oob_score=False,n_jobs=None,random_state=None,verbose=0,warm_start=False,ccp_alpha=0.0,max_samples=None)',
    'param': 'n_estimators : int', 
    'default': '100',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 399,
    'dabc_msg': 'The default of `max_features` changed from `"auto"` to 1.0.',
    'version': '1.1',
    'class': 'ExtraTreesRegressor(ForestRegressor)',
    'method': '__init__(self,n_estimators=100,*,criterion="squared_error",max_depth=None,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_features=1.0,max_leaf_nodes=None,min_impurity_decrease=0.0,bootstrap=False,oob_score=False,n_jobs=None,random_state=None,verbose=0,warm_start=False,ccp_alpha=0.0,max_samples=None)',
    'param': 'max_features : {"sqrt", "log2", None}, int or float', 
    'default': '1.0',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Refactoring'},
   {'id': 407,
    'dabc_msg': 'The default value of ``n_estimators`` changed from 10 to 100',
    'version': '0.22',
    'class': 'RandomTreesEmbedding(TransformerMixin, BaseForest)',
    'method': '__init__(self,n_estimators=100,*,max_depth=5,min_samples_split=2,min_samples_leaf=1,min_weight_fraction_leaf=0.0,max_leaf_nodes=None,min_impurity_decrease=0.0,sparse_output=True,n_jobs=None,random_state=None,verbose=0,warm_start=False)',
    'param': 'n_estimators : int', 
    'default': '100',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 461,
    'dabc_msg': 'The default value of ``contamination`` changed from 0.1',
    'version': '0.22',
    'class': 'IsolationForest(OutlierMixin, BaseBagging)',
    'method': '__init__(self,*,n_estimators=100,max_samples="auto",contamination="auto",max_features=1.0,bootstrap=False,n_jobs=None,random_state=None,verbose=0,warm_start=False)',
    'param': 'contamination : "auto" or float', 
    'default': '"auto"',
    'dabc_module': 'Model Training',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 564,
    'dabc_msg': "The default value of `as_frame` changed from `False` to `'auto'`",
    'version': '0.24',
    'class': 'NA',
    'method': 'fetch_openml(name: Optional[str] = None,*,version: Union[str, int] = "active",data_id: Optional[int] = None,data_home: Optional[str] = None,target_column: Optional[Union[str, List]] = "default-target",cache: bool = True,return_X_y: bool = False,as_frame: Union[str, bool] = "auto",n_retries: int = 3,delay: float = 1.0)',
    'param': 'as_frame : bool or "auto"', 
    'default': '"auto"',
    'dabc_module': 'dataset',
    'reason': 'API simplification',
    'effect': 'Behavior'},
   {'id': 630,
    'dabc_msg': "The default value of ``gamma`` changed from 'auto' to 'scale'.",
    'version': '0.22',
    'class': 'SVC(BaseSVC)',
    'method': '__init__(self,*,C=1.0,kernel="rbf",degree=3,gamma="scale",coef0=0.0,shrinking=True,probability=False,tol=1e-3,cache_size=200,class_weight=None,verbose=False,max_iter=-1,decision_function_shape="ovr",break_ties=False,random_state=None)',
    'param': 'gamma : {"scale", "auto"} or float', 
    'default': '"scale"',
    'dabc_module': 'Model Training',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 631,
    'dabc_msg': "decision_function_shape is 'ovr' by default.",
    'version': '0.19',
    'class': 'SVC(BaseSVC)',
    'method': '__init__(self,*,C=1.0,kernel="rbf",degree=3,gamma="scale",coef0=0.0,shrinking=True,probability=False,tol=1e-3,cache_size=200,class_weight=None,verbose=False,max_iter=-1,decision_function_shape="ovr",break_ties=False,random_state=None)',
    'param': 'decision_function_shape : {"ovo", "ovr"}', 
    'default': '"ovr"',
    'dabc_module': 'Model Training',
    'reason': 'Bug fixing',
    'effect': 'Behavior'},
   {'id': 638,
    'dabc_msg': "The default value of ``gamma`` changed from 'auto' to 'scale'.",
    'version': '0.22',
    'class': 'NuSVC(BaseSVC)',
    'method': '__init__(self,*,nu=0.5,kernel="rbf",degree=3,gamma="scale",coef0=0.0,shrinking=True,probability=False,tol=1e-3,cache_size=200,class_weight=None,verbose=False,max_iter=-1,decision_function_shape="ovr",break_ties=False,random_state=None)',
    'param': 'gamma : {"scale", "auto"} or float', 
    'default': '"scale"',
    'dabc_module': 'Model Training',
    'reason': 'Bug fixing',
    'effect': 'Behavior'},
   {'id': 639,
    'dabc_msg': "decision_function_shape is 'ovr' by default.",
    'version': '0.19',
    'class': 'NuSVC(BaseSVC)',
    'method': '__init__(self,*,nu=0.5,kernel="rbf",degree=3,gamma="scale",coef0=0.0,shrinking=True,probability=False,tol=1e-3,cache_size=200,class_weight=None,verbose=False,max_iter=-1,decision_function_shape="ovr",break_ties=False,random_state=None)',
    'param': 'decision_function_shape : {"ovo", "ovr"}', 
    'default': '"ovr"',
    'dabc_module': 'Model Training',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 646,
    'dabc_msg': "The default value of ``gamma`` changed from 'auto' to 'scale'.",
    'version': '0.22',
    'class': 'SVR(RegressorMixin, BaseLibSVM)',
    'method': '__init__(self,*,kernel="rbf",degree=3,gamma="scale",coef0=0.0,tol=1e-3,C=1.0,epsilon=0.1,shrinking=True,cache_size=200,verbose=False,max_iter=-1)',
    'param': 'gamma : {"scale", "auto"} or float', 
    'default': '"scale"',
    'dabc_module': 'Model Training',
    'reason': 'Bug fixing',
    'effect': 'Behavior'},
   {'id': 650,
    'dabc_msg': "The default value of ``gamma`` changed from 'auto' to 'scale'.",
    'version': '0.22',
    'class': 'NuSVR(RegressorMixin, BaseLibSVM)',
    'method': '__init__(self,*,nu=0.5,C=1.0,kernel="rbf",degree=3,gamma="scale",coef0=0.0,shrinking=True,tol=1e-3,cache_size=200,verbose=False,max_iter=-1)',
    'param': 'gamma : {"scale", "auto"} or float', 
    'default': '"scale"',
    'dabc_module': 'Model Training',
    'reason': 'Bug fixing',
    'effect': 'Behavior'},
   {'id': 654,
    'dabc_msg': "The default value of ``gamma`` changed from 'auto' to 'scale'.",
    'version': '0.22',
    'class': 'OneClassSVM(OutlierMixin, BaseLibSVM)',
    'method': '__init__(self,*,kernel="rbf",degree=3,gamma="scale",coef0=0.0,tol=1e-3,nu=0.5,shrinking=True,cache_size=200,verbose=False,max_iter=-1)',
    'param': 'gamma : {"scale", "auto"} or float', 
    'default': '"scale"',
    'dabc_module': 'Model Training',
    'reason': 'Bug fixing',
    'effect': 'Behavior'},
   {'id': 691,
    'dabc_msg': 'Renamed "full" to "lloyd", and deprecated "auto" and "full". Changed "auto" to use "lloyd" instead of "elkan".',
    'version': '1.1',
    'class': 'NA',
    'method': 'k_means(X,n_clusters,*,sample_weight=None,init="k-means++",n_init=10,max_iter=300,verbose=False,tol=1e-4,random_state=None,copy_x=True,algorithm="lloyd",return_n_iter=False)',
    'param': 'algorithm : {"lloyd", "elkan", "auto", "full"}', 
    'default': '"lloyd"',
    'dabc_module': 'Model Training',
    'reason': 'API simplification',
    'effect': 'Performance'},
   {'id': 693,
    'dabc_msg': 'Renamed "full" to "lloyd", and deprecated "auto" and "full". Changed "auto" to use "lloyd" instead of "elkan".',
    'version': '1.1',
    'class': 'KMeans(_BaseKMeans)',
    'method': '__init__(self,n_clusters=8,*,init="k-means++",n_init=10,max_iter=300,tol=1e-4,verbose=0,random_state=None,copy_x=True,algorithm="lloyd")',
    'param': 'algorithm : {"lloyd", "elkan", "auto", "full"}', 
    'default': '"lloyd"',
    'dabc_module': 'Model Training',
    'reason': 'API simplification',
    'effect': 'Performance'},
   {'id': 697,
    'dabc_msg': '`batch_size` default changed from 100 to 1024.',
    'version': '1.0',
    'class': 'MiniBatchKMeans(_BaseKMeans)',
    'method': '__init__(self,n_clusters=8,*,init="k-means++",max_iter=100,batch_size=1024,verbose=0,compute_labels=True,random_state=None,tol=0.0,max_no_improvement=10,init_size=None,n_init=3,reassignment_ratio=0.01)',
    'param': 'batch_size : int', 
    'default': '1024',
    'dabc_module': 'Model Training',
    'reason': 'Bug fixing',
    'effect': 'Performance'},
   {'id': 734,
    'dabc_msg': '`n_jobs` default changed from 1 to None',
    'version': 'v0.20',
    'class': 'GridSearchCV(BaseSearchCV)',
    'method': '__init__(self,estimator,param_grid,*,scoring=None,n_jobs=None,refit=True,cv=None,verbose=0,pre_dispatch="2*n_jobs",error_score=np.nan,return_train_score=False)',
    'param': 'n_jobs : int', 
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Performance'},
   {'id': 736,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'GridSearchCV(BaseSearchCV)',
    'method': '__init__(self,estimator,param_distributions,*,n_iter=10,scoring=None,n_jobs=None,refit=True,cv=None,verbose=0,pre_dispatch="2*n_jobs",random_state=None,error_score=np.nan,return_train_score=False)',
    'param': 'cv : int, cross-validation generator or an iterable', 
    'default': 'None',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 738,
    'dabc_msg': 'Default value was changed from ``True`` to ``False``',
    'version': '0.21',
    'class': 'GridSearchCV(BaseSearchCV)',
    'method': '__init__(self,estimator,param_grid,*,scoring=None,n_jobs=None,refit=True,cv=None,verbose=0,pre_dispatch="2*n_jobs",error_score=np.nan,return_train_score=False)',
    'param': 'return_train_score : bool', 
    'default': 'False',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 743,
    'dabc_msg': '`n_jobs` default changed from 1 to None',
    'version': 'v0.20',
    'class': 'RandomizedSearchCV(BaseSearchCV)',
    'method': '__init__(self,estimator,param_distributions,*,n_iter=10,scoring=None,n_jobs=None,refit=True,cv=None,verbose=0,pre_dispatch="2*n_jobs",random_state=None,error_score=np.nan,return_train_score=False)',
    'param': 'n_jobs : int', 
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Performance'},
   {'id': 745,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'RandomizedSearchCV(BaseSearchCV)',
    'method': '__init__(self,estimator,param_distributions,*,n_iter=10,scoring=None,n_jobs=None,refit=True,cv=None,verbose=0,pre_dispatch="2*n_jobs",random_state=None,error_score=np.nan,return_train_score=False)',
    'param': 'cv : int, cross-validation generator or an iterable',
    'default': 'None',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 747,
    'dabc_msg': 'Default value was changed from ``True`` to ``False``',
    'version': '0.21',
    'class': 'RandomizedSearchCV(BaseSearchCV)',
    'method': '__init__(self,estimator,param_distributions,*,n_iter=10,scoring=None,n_jobs=None,refit=True,cv=None,verbose=0,pre_dispatch="2*n_jobs",random_state=None,error_score=np.nan,return_train_score=False)',
    'param': 'return_train_score : bool', 
    'default': 'False',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 751,
    'dabc_msg': '``n_splits`` default value changed from 3 to 5.',
    'version': '0.22',
    'class': 'KFold(_BaseKFold)',
    'method': '__init__(self, n_splits=5, *, shuffle=False, random_state=None)',
    'param': 'n_splits : int', 
    'default': '5',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 752,
    'dabc_msg': '``n_splits`` default value changed from 3 to 5.',
    'version': '0.22',
    'class': 'GroupKFold(_BaseKFold)',
    'method': '__init__(self, n_splits=5)',
    'param': 'n_splits : int', 
    'default': '5',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 753,
    'dabc_msg': '``n_splits`` default value changed from 3 to 5.',
    'version': '0.22',
    'class': 'StratifiedKFold(_BaseKFold)',
    'method': '__init__(self, n_splits=5, *, shuffle=False, random_state=None)',
    'param': 'n_splits : int', 
    'default': '5',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 756,
    'dabc_msg': '``n_splits`` default value changed from 3 to 5.',
    'version': '0.22',
    'class': 'TimeSeriesSplit(_BaseKFold)',
    'method': '__init__(self, n_splits=5, *, max_train_size=None, test_size=None, gap=0)',
    'param': 'n_splits : int', 
    'default': '5',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 760,
    'dabc_msg': '``cv`` default value changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'NA',
    'method': 'check_cv(cv=5, y=None, *, classifier=False)',
    'param': 'cv : int, cross-validation generator or an iterable', 
    'default': 'None',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 766,
    'dabc_msg': '``cv`` default value changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'NA',
    'method': 'cross_validate(estimator,X,y=None,*,groups=None,scoring=None,cv=None,n_jobs=None,verbose=0,fit_params=None,pre_dispatch="2*n_jobs",return_train_score=False,return_estimator=False,error_score=np.nan)',
    'param': 'cv : int, cross-validation generator or an iterable', 
    'default': 'None',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 768,
    'dabc_msg': 'Default value was changed from ``True`` to ``False``',
    'version': '0.21',
    'class': 'NA',
    'method': 'def cross_validate(estimator,X,y=None,*,groups=None,scoring=None,cv=None,n_jobs=None,verbose=0,fit_params=None,pre_dispatch="2*n_jobs",return_train_score=False,return_estimator=False,error_score=np.nan)',
    'param': 'return_train_score : bool', 
    'default': 'False',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 771,
    'dabc_msg': '`cv` default value if `None` changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'NA',
    'method': 'cross_val_score(estimator,X,y=None,*,groups=None,scoring=None,cv=None,n_jobs=None,verbose=0,fit_params=None,pre_dispatch="2*n_jobs",error_score=np.nan)',
    'param': 'cv : int, cross-validation generator or an iterable', 
    'default': 'None',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 773,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'NA',
    'method': 'cross_val_predict(estimator,X,y=None,*,groups=None,cv=None,n_jobs=None,verbose=0,fit_params=None,pre_dispatch="2*n_jobs",method="predict")',
    'param': 'cv : int, cross-validation generator or an iterable', 
    'default': 'None',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 775,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'NA',
    'method': 'permutation_test_score(estimator,X,y,*,groups=None,cv=None,n_permutations=100,n_jobs=None,random_state=0,verbose=0,scoring=None,fit_params=None)',
    'param': 'cv : int, cross-validation generator or an iterable', 
    'default': 'None',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 777,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'NA',
    'method': 'def learning_curve(estimator,X,y,*,groups=None,train_sizes=np.linspace(0.1, 1.0, 5),cv=None,scoring=None,exploit_incremental_learning=False,n_jobs=None,pre_dispatch="all",verbose=0,shuffle=False,random_state=None,error_score=np.nan,return_times=False,fit_params=None)',
    'param': 'cv : int, cross-validation generator or an iterable', 
    'default': 'None',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 780,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'NA',
    'method': 'validation_curve(estimator,X,y,*,param_name,param_range,groups=None,cv=None,scoring=None,n_jobs=None,pre_dispatch="all",verbose=0,error_score=np.nan,fit_params=None)',
    'param': 'cv : default value if None changed from 3-fold to 5-fold.',
    'default': 'None',
    'dabc_module': 'Model Evaluation',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 802,
    'dabc_msg': "Default value of multioutput is 'uniform_average'.",
    'version': '0.19',
    'class': 'NA',
    'method': 'def r2_score(y_true,y_pred,*,sample_weight=None,multioutput="uniform_average",force_finite=True)',
    'param': 'multioutput : {"raw_values", "uniform_average", "variance_weighted"}, array-like of shape (n_outputs,) or None', 
    'default': '"uniform_average"',
    'dabc_module': 'Model Evaluation',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 820,
    'dabc_msg': "The default value of ``average_method`` changed from 'max' to",
    'version': '0.22',
    'class': 'NA',
    'method': 'def adjusted_mutual_info_score(labels_true, labels_pred, *, average_method="arithmetic")',
    'param': 'average_method : str', 
    'default': '"arithmetic"',
    'dabc_module': 'Model Evaluation',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 822,
    'dabc_msg': "The default value of ``average_method`` changed from 'geometric' to",
    'version': '0.22',
    'class': 'NA',
    'method': 'def normalized_mutual_info_score(labels_true, labels_pred, *, average_method="arithmetic")',
    'param': 'average_method : str', 
    'default': '"arithmetic"',
    'dabc_module': 'Model Evaluation',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 887,
    'dabc_msg': 'The default learning method is now ``"batch"``.',
    'version': '0.20',
    'class': 'LatentDirichletAllocation(_ClassNamePrefixFeaturesOutMixin, TransformerMixin, BaseEstimator)',
    'method': '__init__(self,n_components=10,*,doc_topic_prior=None,topic_word_prior=None,learning_method="batch",learning_decay=0.7,learning_offset=10.0,max_iter=10,batch_size=128,evaluate_every=-1,total_samples=1e6,perp_tol=1e-1,mean_change_tol=1e-3,max_doc_update_iter=100,n_jobs=None,verbose=0,random_state=None)',
    'param': 'learning_method : {"batch", "online"}', 
    'default': '"batch"',
    'dabc_module': 'Data Decomposition',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 905,
    'dabc_msg': 'When `init=None` and n_components is less than n_samples and n_features',
    'version': '1.1',
    'class': 'NA',
    'method': "def _initialize_nmf(X, n_components, init=None, eps=1e-6, random_state=None)",
    'param': 'init :  {"random", "nndsvd", "nndsvda", "nndsvdar"}', 
    'default': 'None',
    'dabc_module': 'Data Decomposition',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 906,
    'dabc_msg': "The default value of `init` changed from 'random' to None in 0.23.",
    'version': '0.23',
    'class': 'NA',
    'method': 'def non_negative_factorization(X,W=None,H=None,n_components=None,*,init=None,update_H=True,solver="cd",beta_loss="frobenius",tol=1e-4,max_iter=200,alpha="deprecated",alpha_W=0.0,alpha_H="same",l1_ratio=0.0,regularization="deprecated",random_state=None,verbose=0,shuffle=False)',
    'param': 'init : {"random", "nndsvd", "nndsvda", "nndsvdar", "custom"}', 
    'default': 'None',
    'dabc_module': 'Data Decomposition',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 907,
    'dabc_msg': 'When `init=None` and n_components is less than n_samples and n_features',
    'version': '1.1',
    'class': 'NA',
    'method': 'def non_negative_factorization(X,W=None,H=None,n_components=None,*,init=None,update_H=True,solver="cd",beta_loss="frobenius",tol=1e-4,max_iter=200,alpha="deprecated",alpha_W=0.0,alpha_H="same",l1_ratio=0.0,regularization="deprecated",random_state=None,verbose=0,shuffle=False)',
    'param': 'init : {"random", "nndsvd", "nndsvda", "nndsvdar", "custom"}', 
    'default': 'None',
    'dabc_module': 'Data Decomposition',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 915,
    'dabc_msg': 'When `init=None` and n_components is less than n_samples and n_features',
    'version': '1.1',
    'class': 'NMF(_ClassNamePrefixFeaturesOutMixin, TransformerMixin, BaseEstimator)',
    'method': '__init__(self,n_components=None,*,init=None,solver="cd",beta_loss="frobenius",tol=1e-4,max_iter=200,random_state=None,alpha="deprecated",alpha_W=0.0,alpha_H="same",l1_ratio=0.0,verbose=0,shuffle=False,regularization="deprecated")',
    'param': 'init : {"random", "nndsvd", "nndsvda", "nndsvdar", "custom"}', 
    'default': 'None',
    'dabc_module': 'Data Decomposition',
    'reason': 'nan',
    'effect': 'Behavior'},
   {'id': 1026,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'RFECV(RFE)',
    'method': '__init__(self,estimator,*,step=1,min_features_to_select=1,cv=None,scoring=None,verbose=0,n_jobs=None,importance_getter="auto")',
    'param': 'cv : int, cross-validation generator or an iterable', 
    'default': 'None',
    'dabc_module': 'Feature Processing',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1056,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'LassoCV(RegressorMixin, LinearModelCV)',
    'method': '__init__(self,*,eps=1e-3,n_alphas=100,alphas=None,fit_intercept=True,normalize="deprecated",precompute="auto",max_iter=1000,tol=1e-4,copy_X=True,cv=None,verbose=False,n_jobs=None,positive=False,random_state=None,selection="cyclic")',
    'param': 'cv : int, cross-validation generator or an iterable', 
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1060,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'ElasticNetCV(RegressorMixin, LinearModelCV)',
    'method': '__init__(self,*,l1_ratio=0.5,eps=1e-3,n_alphas=100,alphas=None,fit_intercept=True,normalize="deprecated",precompute="auto",max_iter=1000,tol=1e-4,cv=None,copy_X=True,verbose=0,n_jobs=None,positive=False,random_state=None,selection="cyclic")',
    'param': 'cv : int, cross-validation generator or iterable', 
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1071,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'MultiTaskElasticNetCV(RegressorMixin, LinearModelCV)',
    'method': '__init__(self,*,l1_ratio=0.5,eps=1e-3,n_alphas=100,alphas=None,fit_intercept=True,normalize="deprecated",max_iter=1000,tol=1e-4,cv=None,copy_X=True,verbose=0,n_jobs=None,random_state=None,selection="cyclic")',
    'param': 'cv : int, cross-validation generator or iterable', 
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1076,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'MultiTaskLassoCV(RegressorMixin, LinearModelCV)',
    'method': '__init__(self,*,eps=1e-3,n_alphas=100,alphas=None,fit_intercept=True,normalize="deprecated",max_iter=1000,tol=1e-4,copy_X=True,cv=None,verbose=False,n_jobs=None,random_state=None,selection="cyclic")',
    'param': 'cv : int, cross-validation generator or iterable', 
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1122,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'LarsCV(Lars)',
    'method': '__init__(self,*,fit_intercept=True,verbose=False,max_iter=500,normalize="deprecated",precompute="auto",cv=None,max_n_alphas=1000,n_jobs=None,eps=np.finfo(float).eps,copy_X=True)',
    'param': 'cv : int, cross-validation generator or iterable', 
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1126,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'LassoLarsCV(LarsCV)',
    'method': '__init__(self,*,fit_intercept=True,verbose=False,max_iter=500,normalize="deprecated",precompute="auto",cv=None,max_n_alphas=1000,n_jobs=None,eps=np.finfo(float).eps,copy_X=True,positive=False)',
    'param': 'cv : int, cross-validation generator or iterable', 
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1141,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'OrthogonalMatchingPursuitCV(RegressorMixin, LinearModel)',
    'method': '__init__(self,*,copy=True,fit_intercept=True,normalize="deprecated",max_iter=None,cv=None,n_jobs=None,verbose=False)',
    'param': 'cv : int, cross-validation generator or iterable', 
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1185,
    'dabc_msg': "Default changed from 'ovr' to 'auto' in 0.22.",
    'version': '0.22',
    'class': 'NA',
    'method': 'def _logistic_regression_path(X,y,pos_class=None,Cs=10,fit_intercept=True,max_iter=100,tol=1e-4,verbose=0,solver="lbfgs",coef=None,class_weight=None,dual=False,penalty="l2",intercept_scaling=1.0,multi_class="auto",random_state=None,check_input=True,max_squared_sum=None,sample_weight=None,l1_ratio=None,n_threads=1)',
    'param': 'multi_class: : {"ovr", "multinomial", "auto"}', 
    'default': '"auto"',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1191,
    'dabc_msg': "The default solver changed from 'liblinear' to 'lbfgs' in 0.22.",
    'version': '0.22',
    'class': 'LogisticRegression(LinearClassifierMixin, SparseCoefMixin, BaseEstimator)',
    'method': '__init__(self,penalty="l2",*,dual=False,tol=1e-4,C=1.0,fit_intercept=True,intercept_scaling=1,class_weight=None,random_state=None,solver="lbfgs",max_iter=100,multi_class="auto",verbose=0,warm_start=False,n_jobs=None,l1_ratio=None)',
    'param': 'solver : {"newton-cg", "lbfgs", "liblinear", "sag", "saga"}', 
    'default': '"lbfgs"',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1193,
    'dabc_msg': "Default changed from 'ovr' to 'auto' in 0.22.",
    'version': '0.22',
    'class': 'LogisticRegression(LinearClassifierMixin, SparseCoefMixin, BaseEstimator)',
    'method': '__init__(self,penalty="l2",*,dual=False,tol=1e-4,C=1.0,fit_intercept=True,intercept_scaling=1,class_weight=None,random_state=None,solver="lbfgs",max_iter=100,multi_class="auto",verbose=0,warm_start=False,n_jobs=None,l1_ratio=None)',
    'param': 'multi_class: : {"auto", "ovr", "multinomial"}', 
    'default': '"auto"',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1199,
    'dabc_msg': '``cv`` default value if None changed from 3-fold to 5-fold.',
    'version': '0.22',
    'class': 'LogisticRegressionCV(LogisticRegression, LinearClassifierMixin, BaseEstimator)',
    'method': '__init__(self,*,Cs=10,fit_intercept=True,cv=None,dual=False,penalty="l2",scoring=None,solver="lbfgs",tol=1e-4,max_iter=100,class_weight=None,n_jobs=None,verbose=0,refit=True,intercept_scaling=1.0,multi_class="auto",random_state=None,l1_ratios=None)',
    'param': 'cv : int or cross-validation generator', 
    'default': 'None',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1204,
    'dabc_msg': "Default changed from 'ovr' to 'auto' in 0.22.",
    'version': '0.22',
    'class': 'LogisticRegressionCV(LogisticRegression, LinearClassifierMixin, BaseEstimator)',
    'method': '__init__(self,*,Cs=10,fit_intercept=True,cv=None,dual=False,penalty="l2",scoring=None,solver="lbfgs",tol=1e-4,max_iter=100,class_weight=None,n_jobs=None,verbose=0,refit=True,intercept_scaling=1.0,multi_class="auto",random_state=None,l1_ratios=None)',
    'param': 'multi_class: : {"auto", "ovr", "multinomial"}', 
    'default': '""auto"',
    'dabc_module': 'Model Training',
    'reason': 'Maintainability',
    'effect': 'Behavior'},
   {'id': 1269,
    'dabc_msg': 'The default value of ``contamination`` changed from 0.1',
    'version': '0.22',
    'class': 'LocalOutlierFactor(KNeighborsMixin, OutlierMixin, NeighborsBase)',
    'method': '__init__(self,n_neighbors=20,*,algorithm="auto",leaf_size=30,metric="minkowski",p=2,metric_params=None,contamination="auto",novelty=False,n_jobs=None)',
    'param': 'contamination : "auto" or float', 
    'default': '"auto"',
    'dabc_module': 'Model Training',
    'reason': 'nan',
    'effect': 'Behavior'}
]


export function activate(context: vscode.ExtensionContext) {
    const decorationType = vscode.window.createTextEditorDecorationType({
        textDecoration: 'underline wavy',
        color: '#C00000'
    });

    function updateDecorations(editor: vscode.TextEditor) {
        if (!editor) {
            return;
        }

        const text = editor.document.getText();
        const functionCallRanges: vscode.Range[] = [];
        const functionCallPattern = /\b\w+\s*\(/g;
        let match;
        while ((match = functionCallPattern.exec(text)) !== null) {
            const startPos = editor.document.positionAt(match.index);
            const endPos = editor.document.positionAt(match.index + match[0].length - 1);
            const range = new vscode.Range(startPos, endPos);
            functionCallRanges.push(range);
        }

        editor.setDecorations(decorationType, functionCallRanges);
    }

    vscode.window.onDidChangeActiveTextEditor(editor => {
        if (editor) {
            updateDecorations(editor);
        }
    }, null, context.subscriptions);

    vscode.workspace.onDidChangeTextDocument(event => {
        if (vscode.window.activeTextEditor && event.document === vscode.window.activeTextEditor.document) {
            updateDecorations(vscode.window.activeTextEditor);
        }
    }, null, context.subscriptions);

    const supportedLanguages = ['python'];
    supportedLanguages.forEach(language => {
        let disposable = vscode.languages.registerHoverProvider(language, {
            provideHover(document, position) {
                const wordRange = document.getWordRangeAtPosition(position, /\b\w+\b/);
                if (!wordRange) {
                    return;
                }

                const word = document.getText(wordRange);
                const line = document.lineAt(position).text;

                const functionCallRegex = new RegExp(`\\b${word}\\s*\\(([^)]*)\\)`);
                const match = line.match(functionCallRegex);
                
                if (match) {
                    const functionCall = match[0]; // Exemplo: multiplica(x=4, y=3)
                    const params = match[1]; // Exemplo: x=4, y=3
                    
                    // Separar parâmetros individualmente
                    const paramList = params.split(',').map(param => param.trim()).filter(p => p);
                    
                    let hoverText = `**Chamada de função:**\n\n\`\`\`python\n${functionCall}\n\`\`\``;
                    if (paramList.length > 0) {
                        hoverText += `\n\n**Parâmetros:**\n`;
                        paramList.forEach(param => {
                            hoverText += `- \`${param}\`\n`;
                        });
                    }
                    return new vscode.Hover(hoverText);
                }
            }
        });

        context.subscriptions.push(disposable);
    });
}

export function deactivate() {}
